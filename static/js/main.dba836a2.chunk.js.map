{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","squeres","this","slice","calcularVencedor","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAOC,GAEd,OACE,4BACAC,UAAY,SACZC,QAAWF,EAAME,SAEdF,EAAMG,O,IAKLC,E,kDACJ,WAAYJ,GACX,IAAD,8BACE,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJb,E,wDAQYC,GAEV,IAAMC,EAAUC,KAAKP,MAAMC,QAAQO,QAC/BC,EAAiBH,IAAYA,EAAQD,KAIzCC,EAAQD,GAAKE,KAAKP,MAAMI,QAAU,IAAM,IACxCG,KAAKG,SAAS,CACZT,QAASK,EACTF,SAAUG,KAAKP,MAAMI,a,mCAIZC,GAAI,IAAD,OACd,OAAO,kBAACX,EAAD,CACPI,MAAOS,KAAKP,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKc,YAAYN,Q,+BAKhC,IACIO,EADEC,EAASJ,EAAiBF,KAAKP,MAAMC,SAU3C,OANEW,EAFEC,EAEO,WAAaA,EAGb,iBAAmBN,KAAKP,MAAMI,QAAU,IAAM,KAIvD,6BACE,yBAAKR,UAAU,UAAUgB,GACzB,yBAAKhB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKlB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKlB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GA1DTC,IAAMC,WAiEpBC,E,uKAEF,OACE,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GATSmB,IAAMC,WAuBzB,SAASP,EAAiBH,GAaxB,IAXA,IAAMY,EAAQ,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGEb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAClC,CAAC,IAAD,cACkBa,EAAMb,GADxB,GACSe,EADT,KACWC,EADX,KACaC,EADb,KAEE,GAAIhB,EAAQc,IAAMd,EAAQc,KAAOd,EAAQe,IAAMf,EAAQc,KAAOd,EAAQgB,GAEpE,OAAOhB,EAAQc,GAGnB,OAAO,KA1BTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.dba836a2.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n\r\nfunction Square(props)\r\n{\r\n  return(\r\n    <button\r\n    className = \"square\"\r\n    onClick = {props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n  \r\n  class Board extends React.Component {\r\n    constructor(props)\r\n    {\r\n      super(props)\r\n      this.state = {\r\n        squares: Array(9).fill(null),\r\n        xIsNext: true\r\n      }\r\n    }\r\n\r\n    handleClick(i)\r\n    {\r\n      const squeres = this.state.squares.slice()\r\n      if (calcularVencedor(squeres) || squeres[i])\r\n      {\r\n        return\r\n      }\r\n      squeres[i] = this.state.xIsNext ? 'X' : 'O'\r\n      this.setState({\r\n        squares: squeres,\r\n        xIsNext: !this.state.xIsNext\r\n      })\r\n    }\r\n\r\n    renderSquare(i) {\r\n      return <Square\r\n      value={this.state.squares[i]}\r\n      onClick={() => this.handleClick(i)}\r\n      />;\r\n    }\r\n  \r\n    render() {\r\n      const winner = calcularVencedor(this.state.squares);\r\n      let status;\r\n      if (winner)\r\n      {\r\n        status = 'Winner: ' + winner\r\n      } else\r\n      {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calcularVencedor(squeres)\r\n  {\r\n    const lines = [\r\n      [0,1,2],\r\n      [3,4,5],\r\n      [6,7,8],\r\n      [0,3,6],\r\n      [1,4,7],\r\n      [2,5,8],\r\n      [0,4,8],\r\n      [2,4,6]\r\n    ]\r\n\r\n    for (let i = 0; i < lines.length; i++)\r\n    {\r\n      const [a,b,c] = lines[i]\r\n      if (squeres[a] && squeres[a] === squeres[b] && squeres[a] === squeres[c])\r\n      {\r\n        return squeres[a]\r\n      }\r\n    }\r\n    return null\r\n  }"],"sourceRoot":""}